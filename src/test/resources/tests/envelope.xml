<t:test xmlns:t="http://xproc.org/ns/testsuite/3.0" expected="pass">

<t:info>
  <t:title>Load another PDF document</t:title>
  <t:revision-history>
    <t:revision>
      <t:date>2018-10-18</t:date>
      <t:author initials="ndw">
        <t:name>Norman Walsh</t:name>
      </t:author>
      <t:description xmlns="http://www.w3.org/1999/xhtml">
        <p>Initial checkin.</p>
      </t:description>
    </t:revision>
  </t:revision-history>
</t:info>

<t:description xmlns="http://www.w3.org/1999/xhtml">
  <p>Test that the <code>cx:metadata-extractor</code> can read another PDF document.</p>
</t:description>

<t:pipeline>
  <p:declare-step xmlns:p="http://www.w3.org/ns/xproc"
                  xmlns:cx="http://xmlcalabash.com/ns/extensions"
                  version="3.0">
    <p:output port="result"
              serialization="map { 'omit-xml-declaration': true(),
                                   'indent': true() }"/>

    <p:declare-step type="cx:metadata-extractor">
      <p:input port="source" content-types="image/*"/>
      <p:output port="result" content-types="application/xml"/>
    </p:declare-step>

    <cx:metadata-extractor>
      <p:with-input port="source">
        <p:document href="../envelope.pdf"/>
      </p:with-input>
    </cx:metadata-extractor>
  </p:declare-step>
</t:pipeline>

<t:schematron>
  <s:schema xmlns:s="http://purl.oclc.org/dsdl/schematron"
            xmlns:p="http://www.w3.org/ns/xproc"
            xmlns:rng="http://relaxng.org/ns/structure/1.0">
     <s:ns prefix="p" uri="http://www.w3.org/ns/xproc"/>
     <s:ns prefix="cx" uri="http://xmlcalabash.com/ns/extensions"/>
     <s:ns prefix="c" uri="http://www.w3.org/ns/xproc-step"/>
     <s:ns prefix="dc" uri="http://purl.org/dc/elements/1.1/"/>
     <s:ns prefix="rdf" uri="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>

     <s:pattern>
       <s:rule context="/*">
         <s:assert test="self::c:metadata">The output should be a c:metadata document</s:assert>
         <s:assert test="@content-type='application/pdf'">Content type should be application/pdf</s:assert>
         <s:assert test="@height='297.0' and @units='pt'">The height should be 297pt</s:assert>
         <s:assert test="@width='684.0' and @units='pt'">The width should be 684pt</s:assert>
         <s:assert test="dc:title">A dc:title is expected</s:assert>
         <s:assert test="dc:creator">A dc:creator is expected</s:assert>
       </s:rule>
       <s:rule context="dc:title">
         <s:assert test=".//rdf:li = 'An Envelope'">The title “An Envelope” is expected</s:assert>
       </s:rule>
       <s:rule context="dc:creator">
         <s:assert test=".//rdf:li = 'Norman Walsh'">The author “Norman Walsh” is expected</s:assert>
       </s:rule>
     </s:pattern>
  </s:schema>
</t:schematron>
</t:test>
